	// Переменные 
	let message 

	message = '1'

	console.log('message')


	//Переменная это величина непостоянная,тоесть может менятся безчисленное количество раз
	//Сначала переменная обьявлеяется и только потом используется
	// let & const
	
	const = message 
	//const переменная постоянная ее нельзя переопределить 

	let message = '12'

	message = '13'
	//let переменная не постоянная 
	
	// Несколько переменных
	// После обьяления переменной и присвоения ей значения ставиться запятая и указывается имя следубщей переменной и т.д.
	const 
	name = 'Александр' ,
	age = 28 ,
	isDeveloper = true
	// Лучше избегать такой конструкции и обьявлять переменной со своей const или let
	// В значение переменной можно указать имя другой переменной
	const name = 'Александр'

	const admin = name
	//Нельзя обьявлять имя переменной два раза  
	const age = 20
	const age = 18
	//Это не правильное написание,получиться ошибка говорящая что перемнная уже была обьявлена
	// Имя переменной может называться как угодно (предпочтительно латиница), но не может начинаться с цифры 

	//Типы данных
	//Всего 8 типов данных 
	//6 из них простых
	// Тип данных string(строки)
	// обязательно закючаются в кавычки 
	// `` обратные кавычки имеют функционал,а именно мы можем втраивать в такую строку другие сущности
	
	const goodbye = 'Пока'
	const name = 'Ваня'

	const message = `${goodbye}, ${name}`
	//В консоли будет Пока Ваня (это называется интерпаляция строк)
	//В рамках конструкции ${} можем использовать любые выражения JS
	

	const a = 5
	const b = 10
	const sum = `Сумма a и b равна ${a + b}`

	//`` бэктики позволяет растянуть содержимое на несколько строк 
	

	const message = `1
2
3
4
5
6
	`
	//Остальные кавычки не позволяют такое и будут выдавать ошибку
	//Тип данных числовой number 
	
	console.log(100 / 0)
	//РЕзультат будет Infinity (бесконечность)
	
	console.log(-100 / 0)
	//РЕзультат будет -Infinity (отрицательная бесконечность)
	//Тип данных bigint большое число больше 15 цифр  используется с приставкой n
	//Логический тип данных true или false
	

	const age = 19
	const isChild = age < 25
	//true

	const age = 19
	const isChild = age > 25
	//false
	//
	//Тип данных null (ничего) иногда присваивают переменным в значении которых пока нет данных но ожидается что данные в переменной появятся
	//тип данных undefined (не присвоенной значение)
	let name
	//Тип данных обьект предназначены для более сложных конструкций массивы,коллекции и т.д.
	const user = {
		name: 'NAME',
		age: 30,
		isDeveloper: true,
	}
	// Проверка какой тип данных хранится в переменной,есть спец оператор typeof
	

	const message = 'але'

	console.log(
		typeof message
	)
	//Преобразование типов данных
	//Преобразование типов бывают явные и неявные 
	//Явные
	
	const age = 11

	console.log(string(age)) 
	//Вывод в консоли будет тип данных строка
	//String глобальная функция в js которая преобразует значение в скобках в строковый тип данных
	// Number тоже самое что и String только меняет в числовой тип данных
	//Результатом преобразования функицей Number булевых значений будет true=1 false=0 
	// Boolean тоже самое что и Number и String
	// Преобразуются в false
	console.log(oolean()) 